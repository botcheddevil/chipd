--------------------
./lib/zlib-1.2.8/configure
Sun Jul 21 08:31:37 IST 2013
Checking for gcc...
=== ztest458.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest458.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest458.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest458.c

Checking for shared library support...
=== ztest458.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest458.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz..dylib -compatibility_version -current_version -O3 -fPIC -o ztest458.dylib ztest458.o
ld: malformed 32-bit x.y.z version number: -current_version
collect2: ld returned 1 exit status
(exit code 1)
No shared library support.
Building static library libz.a version with gcc.

=== ztest458.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest458.c
ztest458.c:2: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘dummy’
(exit code 1)
Checking for off64_t... No.

=== ztest458.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest458 ztest458.c
Checking for fseeko... Yes.

=== ztest458.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest458 ztest458.c
Checking for strerror... Yes.

=== ztest458.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest458.c
Checking for unistd.h... Yes.

=== ztest458.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest458.c
Checking for stdarg.h... Yes.

=== ztest458.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest458.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest458.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest458 ztest458.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest458.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest458.c
Checking for return value of vsnprintf()... Yes.

=== ztest458.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest458.c
Checking for attribute(visibility) support... Yes.

ALL = static
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic
VER =
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


